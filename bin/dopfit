#!/usr/bin/env python
#
# Script to run doppler.fit() on a spectrum

import os
import time
import doppler
from astropy.io import fits
from astropy.table import Table
from argparse import ArgumentParser

# Main command-line program
if __name__ == "__main__":
    parser = ArgumentParser(description='Run Doppler Fit on a spectrum')
    parser.add_argument('file', type=str, nargs=1, help='Spectrum FITS file')
    parser.add_argument('-v','--verbose', action='store_true', help='Verbose output')
    parser.add_argument('--outfile', type=str, default='', help='Output filename')    
    args = parser.parse_args()

    t0 = time.time()
    filename = args.file[0]
    outfile = args.outfile
    verbose = args.verbose
    if outfile=='':
        fdir = os.path.dirname(filename)
        base = os.path.basename(filename)
        ext = ['.fit','.fits','.fit.gz','.fits.gz','.fit.fz','.fits.fz']
        for e in ext:
            if base[-len(e):]==e:
                base = base[0:-len(e)]
                break
        if fdir != '':
            outfile = fdir+'/'+base+'_dopfit.fits'
        else:
            outfile = base+'_dopfit.fits'

    # Check that file exists
    if os.path.exists(filename) is False:
        raise ValuError(filename+' NOT FOUND')

    # Load the spectrum
    spec = doppler.read(filename)
    spec.normalize()
    
    # Run Doppler
    out, model, specm = doppler.fit(spec,verbose=verbose)

    # Save the output
    if verbose is True:
        print('Writing output to '+outfile)
    if os.path.exists(outfile): os.remove(outfile)
    Table(out).write(outfile)
    # append best model
    hdulist = fits.open(outfile)
    hdu = fits.PrimaryHDU(model.flux)
    hdulist.append(hdu)
    hdulist.writeto(outfile,overwrite=True)
    hdulist.close()

    # Add SPECM??
